// Gradle / Project setup
// ---------------------------------------------------------

plugins {
	id 'java'

	// Generates the plugin.yml, allows easier access to common plugin libraries, and facilitates the test server tasks.
	id 'kr.entree.spigradle' version '2.4.2'

	// Allows us to shade libraries into the build plugin.
	id 'com.github.johnrengelman.shadow' version '5.2.0'
}

repositories {
	mavenCentral()
	jitpack()

	spigotmc()
	sonatype()
	papermc()
}

dependencies {
	compileOnly spigot(project.property('mcVersion'))
	compileOnly paper(project.property('mcVersion'))

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'com.github.seeseemelk:MockBukkit-v1.19:2.29.0'
}

test {
	useJUnitPlatform()
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

task cleanAll {
	dependsOn 'clean'
	dependsOn 'cleanDebug'
	dependsOn 'cleanSpigotBuild'
}

// Compilation variables / tasks
// ---------------------------------------------------------

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Shading
// ---------------------------------------------------------

tasks.build.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)

shadowJar {
	// This is required to prevent Spigradle from attempting to look for an incorrectly named file during debug.
	classifier = ''

	// relocate 'old.path.lib', "${project.property('group')}.lib"
}

// Plugin variables / tasks
// ---------------------------------------------------------

group = project.property('group')
version = project.property('version')
description = project.property('description')

spigot {
	name = project.property('name')
	authors = project.property('authors').split(/(,\s*|\s+)/)
	apiVersion = project.property('apiVersion')
	load = STARTUP

	debug {
		eula = true
		buildVersion = project.property('mcVersion')
		args = project.property('debugServerArgs').split(/(,\s*|\s+)/)
		
		// This caused issues with the debugPaper task
		// jvmArgs = project.property('debugServerJvmArgs').split(/(,\s*|\s+)/)
	}
}
